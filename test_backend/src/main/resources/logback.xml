<?xml version="1.0" encoding="UTF-8" ?>
<!--
	scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
	scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
	debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。-->
<configuration scan="ture" scanPeriod="60 seconds" debug="false">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
    <property name="LOG_HOME" value="F:/log/test"/>
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- %.-1level 只显示信息级别的首字母,%-5level 左对齐显示信息级别全称 -->
            <Pattern>[%date{yyyy-MM-dd HH:mm:ss}] [%-5level] --%mdc{client} %msg%n</Pattern>
        </encoder>
    </appender>

    <appender name="myFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/logs/ossLog.log</file><!-- 日志名称 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/logs/ossLog.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <maxFileSize>20MB</maxFileSize><!-- 设置日志大小为20mb -->
            <maxHistory>10</maxHistory><!-- 最大保存时间 -->
            <totalSizeCap>1GB</totalSizeCap><!-- 总文件大小 -->
        </rollingPolicy>
        <!-- encoder负责两件事，一是把日志信息转换成字节数组，二是把字节数组写入到输出流。 -->
        <encoder>
            <pattern>[%date{yyyy-MM-dd HH:mm:ss}] [%-5level] [%logger:%line] --%mdc{client} %msg%n</pattern>
        </encoder>
        <!-- 过滤器，可以过滤掉不符合条件的日志，INFO及以上的日志被处理，其它的拒绝 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!-- 根日志,所有logger默认继承自root，打印信息向上级传递，所以以上logger所打印的日志默认被 STDOUT appender再处理一遍，
       也就是会被打印到控制台，可以再通过设置logger的additivity="false"，使得不再向上传递
   -->
    <root level="info">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="myFile"/>
    </root>
</configuration>